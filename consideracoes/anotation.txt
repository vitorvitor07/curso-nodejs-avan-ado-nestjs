Domínio => Problema a ser resolvido

Pilares arquitetura de SW

• Organização: organizar um sistema para que possamos atender os objetivos de
negócio gerando um produto para o cliente final.

• Estruturação: criar um software de qualidade e que consiga evoluir com o passar do
tempo.

• Componentização: componentização dos processos para que eles operem com
eficácia, evitando o retrabalho.

• Relacionamento entre sistemas: preparar seus componentes para que esses
consigam se integrar de maneira eficiente dentro de um processo maior.

• Governança: A governança busca a garantia de que o software continue funcionando
independente de equipe.

Clean Architecture, DDD e SOLID.

As empresas estao usando essas metodologias que garantem softwares com estruturas
robustas, com maiores facilidades para manutenções, custos menores, além de várias
outras vantagens. O software precisa agregarlvalor ao negócio para que seja válida sua
existencia.

Arquitetura Limpa - Gráfico

Camada interna - usar linguagem pura

  - Entities
Regras de negócios
Razão de ser de um SW

  - Use Cases
Regras de negócios a nível de aplicação

Camada externa - pode usar framework, etc...

  - Controllers, Gateways e Presenters
Adaptadores de interfaces

Fastify - 
Adpter - Gerenciador de Rotas
Formatação de resposta

Criar módulo de configuração de ambiente

cl: nest g module shared/infrastructure/env-config

Criar service de configuração de ambiente

cl: nest g service shared/infrastructure/env-config

Casos de uso e Entidades não podem haver dependencias

Dependencia para teste

Faker -> Cria informações semânticas para testes